// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * APIClientService provides the main API for the frontend
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

/**
 * @returns {$CancellablePromise<void>}
 */
export function ClearRequestHistory() {
    return $Call.ByID(4112628272);
}

/**
 * Collection methods
 * @param {string} name
 * @param {string} description
 * @returns {$CancellablePromise<models$0.Collection | null>}
 */
export function CreateCollection(name, description) {
    return $Call.ByID(750527762, name, description).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * Environment methods
 * @param {string} name
 * @param {string} variables
 * @returns {$CancellablePromise<models$0.Environment | null>}
 */
export function CreateEnvironment(name, variables) {
    return $Call.ByID(2690630719, name, variables).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * Folder methods
 * @param {string} name
 * @param {number} collectionID
 * @param {number | null} parentFolderID
 * @returns {$CancellablePromise<models$0.Folder | null>}
 */
export function CreateFolder(name, collectionID, parentFolderID) {
    return $Call.ByID(31504138, name, collectionID, parentFolderID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType5($result);
    }));
}

/**
 * Request methods
 * @param {string} name
 * @param {string} method
 * @param {string} url
 * @param {string} headers
 * @param {string} body
 * @param {number | null} collectionID
 * @param {number | null} folderID
 * @returns {$CancellablePromise<models$0.Request | null>}
 */
export function CreateRequest(name, method, url, headers, body, collectionID, folderID) {
    return $Call.ByID(616470831, name, method, url, headers, body, collectionID, folderID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType7($result);
    }));
}

/**
 * RequestHistory methods
 * @param {number} requestID
 * @param {number} responseStatus
 * @param {number} responseTime
 * @param {string} responseBody
 * @param {string} responseHeaders
 * @returns {$CancellablePromise<models$0.RequestHistory | null>}
 */
export function CreateRequestHistory(requestID, responseStatus, responseTime, responseBody, responseHeaders) {
    return $Call.ByID(593508241, requestID, responseStatus, responseTime, responseBody, responseHeaders).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType9($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<void>}
 */
export function DeleteCollection(id) {
    return $Call.ByID(3996036597, id);
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<void>}
 */
export function DeleteEnvironment(id) {
    return $Call.ByID(3734827270, id);
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<void>}
 */
export function DeleteFolder(id) {
    return $Call.ByID(2210387745, id);
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<void>}
 */
export function DeleteRequest(id) {
    return $Call.ByID(2608164758, id);
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<void>}
 */
export function DeleteRequestHistory(id) {
    return $Call.ByID(500888574, id);
}

/**
 * ExecuteRequest sends an HTTP request and returns the response
 * @param {string} method
 * @param {string} url
 * @param {string} headers
 * @param {string} body
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ExecuteRequest(method, url, headers, body) {
    return $Call.ByID(4279139746, method, url, headers, body).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType10($result);
    }));
}

/**
 * @returns {$CancellablePromise<models$0.Environment | null>}
 */
export function GetActiveEnvironment() {
    return $Call.ByID(4114954677).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<models$0.Collection | null>}
 */
export function GetCollection(id) {
    return $Call.ByID(156982866, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * @returns {$CancellablePromise<(models$0.Collection | null)[]>}
 */
export function GetCollections() {
    return $Call.ByID(3688181235).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType11($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<models$0.Environment | null>}
 */
export function GetEnvironment(id) {
    return $Call.ByID(3774239871, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * @returns {$CancellablePromise<(models$0.Environment | null)[]>}
 */
export function GetEnvironments() {
    return $Call.ByID(801525476).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType12($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<models$0.Folder | null>}
 */
export function GetFolder(id) {
    return $Call.ByID(2681527882, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType5($result);
    }));
}

/**
 * @returns {$CancellablePromise<(models$0.Folder | null)[]>}
 */
export function GetFolders() {
    return $Call.ByID(3575239611).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType13($result);
    }));
}

/**
 * @param {number} collectionID
 * @returns {$CancellablePromise<(models$0.Folder | null)[]>}
 */
export function GetFoldersByCollection(collectionID) {
    return $Call.ByID(3308135550, collectionID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType13($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<models$0.Request | null>}
 */
export function GetRequest(id) {
    return $Call.ByID(710646895, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType7($result);
    }));
}

/**
 * @returns {$CancellablePromise<(models$0.RequestHistory | null)[]>}
 */
export function GetRequestHistory() {
    return $Call.ByID(2650206417).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType14($result);
    }));
}

/**
 * @param {number} id
 * @returns {$CancellablePromise<models$0.RequestHistory | null>}
 */
export function GetRequestHistoryByID(id) {
    return $Call.ByID(1214143277, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType9($result);
    }));
}

/**
 * @param {number} requestID
 * @returns {$CancellablePromise<(models$0.RequestHistory | null)[]>}
 */
export function GetRequestHistoryByRequest(requestID) {
    return $Call.ByID(1318458705, requestID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType14($result);
    }));
}

/**
 * @returns {$CancellablePromise<(models$0.Request | null)[]>}
 */
export function GetRequests() {
    return $Call.ByID(3392585748).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType15($result);
    }));
}

/**
 * @param {number} collectionID
 * @returns {$CancellablePromise<(models$0.Request | null)[]>}
 */
export function GetRequestsByCollection(collectionID) {
    return $Call.ByID(3935467957, collectionID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType15($result);
    }));
}

/**
 * @param {number} folderID
 * @returns {$CancellablePromise<(models$0.Request | null)[]>}
 */
export function GetRequestsByFolder(folderID) {
    return $Call.ByID(88407521, folderID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType15($result);
    }));
}

/**
 * @param {number} id
 * @param {string} name
 * @param {string} description
 * @returns {$CancellablePromise<models$0.Collection | null>}
 */
export function UpdateCollection(id, name, description) {
    return $Call.ByID(378234159, id, name, description).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * @param {number} id
 * @param {string} name
 * @param {string} variables
 * @param {boolean} isActive
 * @returns {$CancellablePromise<models$0.Environment | null>}
 */
export function UpdateEnvironment(id, name, variables, isActive) {
    return $Call.ByID(3433491096, id, name, variables, isActive).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * @param {number} id
 * @param {string} name
 * @param {number} collectionID
 * @param {number | null} parentFolderID
 * @returns {$CancellablePromise<models$0.Folder | null>}
 */
export function UpdateFolder(id, name, collectionID, parentFolderID) {
    return $Call.ByID(218600027, id, name, collectionID, parentFolderID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType5($result);
    }));
}

/**
 * @param {number} id
 * @param {string} name
 * @param {string} method
 * @param {string} url
 * @param {string} headers
 * @param {string} body
 * @param {number | null} collectionID
 * @param {number | null} folderID
 * @returns {$CancellablePromise<models$0.Request | null>}
 */
export function UpdateRequest(id, name, method, url, headers, body, collectionID, folderID) {
    return $Call.ByID(3453889040, id, name, method, url, headers, body, collectionID, folderID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType7($result);
    }));
}

// Private type creation functions
const $$createType0 = models$0.Collection.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = models$0.Environment.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = models$0.Folder.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
const $$createType6 = models$0.Request.createFrom;
const $$createType7 = $Create.Nullable($$createType6);
const $$createType8 = models$0.RequestHistory.createFrom;
const $$createType9 = $Create.Nullable($$createType8);
const $$createType10 = $Create.Map($Create.Any, $Create.Any);
const $$createType11 = $Create.Array($$createType1);
const $$createType12 = $Create.Array($$createType3);
const $$createType13 = $Create.Array($$createType5);
const $$createType14 = $Create.Array($$createType9);
const $$createType15 = $Create.Array($$createType7);
